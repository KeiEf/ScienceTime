# Generated by Django 3.2.9 on 2021-12-26 07:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers
import website.models


class Migration(migrations.Migration):

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('website', '0029_auto_20211224_1028'),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='製品名')),
                ('main_image', models.ImageField(blank=True, null=True, upload_to=website.models.image_product, verbose_name='画像')),
                ('image_url', models.CharField(blank=True, max_length=255, null=True, verbose_name='画像url')),
                ('description', models.TextField(blank=True, max_length=255, verbose_name='概略')),
                ('genre', models.CharField(blank=True, default='雑貨', max_length=50)),
                ('views', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('main_url', models.CharField(blank=True, max_length=255, null=True, verbose_name='メインリンク')),
                ('amazon_url', models.CharField(blank=True, max_length=255, null=True, verbose_name='Amazon')),
                ('rakuten_url', models.CharField(blank=True, max_length=255, null=True, verbose_name='楽天')),
                ('suzuri_url', models.CharField(blank=True, max_length=255, null=True, verbose_name='suzuri')),
                ('other_url1', models.CharField(blank=True, max_length=255, null=True, verbose_name='url1')),
                ('other_url2', models.CharField(blank=True, max_length=255, null=True, verbose_name='url2')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('book_tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='タグ')),
            ],
        ),
    ]
